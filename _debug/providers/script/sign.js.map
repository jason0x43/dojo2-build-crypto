{"version":3,"file":"sign.js","sourceRoot":"","sources":["providers/script/sign.ts"],"names":["sign","ScriptSigner","ScriptSigner.constructor","ScriptSigner.abort","ScriptSigner.close","ScriptSigner.write","getSign"],"mappings":"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","sourcesContent":["import * as crypto from 'crypto';\nimport Promise, { State } from 'dojo-core/Promise';\nimport { ByteBuffer, Codec, utf8 } from 'dojo-core/encoding';\nimport { Data, Key, Signer, SignFunction } from '../../crypto';\nimport { ScriptHash } from './base';\nimport hmac from './hmac';\nimport { ALGORITHMS as HASH_ALGORITHMS } from './hash';\n\ndeclare const require: Function;\n\n/**\n * A mapping of crypto algorithm names to their node equivalents\n */\nconst ALGORITHMS = {\n\thmac: hmac\n};\n\nconst resolvedPromise = Promise.resolve();\n\n/**\n * Generates a signature for a chunk of data.\n *\n * The algorithm parameter is currently ignored.\n */\nfunction sign(algorithm: string, key: Key, data: Data, codec: Codec): Promise<ByteBuffer> {\n\tconst hash = HASH_ALGORITHMS[key.algorithm];\n\tconst keyData: ByteBuffer = typeof key.data === 'string' ?\n\t\tutf8.encode(<string> key.data) : <ByteBuffer> key.data;\n\tconst byteData: ByteBuffer = typeof data === 'string' ?\n\t\tcodec.encode(<string> data) : <ByteBuffer> data;\n\treturn Promise.resolve(hmac(hash, byteData, keyData));\n}\n\n/**\n * An object that can be used to generate a signature for a stream of data.\n */\nclass ScriptSigner<T extends Data> implements Signer<T> {\n\t/**\n\t * The algorithm is currently ignored as 'hmac' is the only supported algorithm.\n\t */\n\tconstructor(algorithm: string, key: Key, codec: Codec) {\n\t\tif (key.data == null) {\n\t\t\tthrow new Error('Key data must be non-null');\n\t\t}\n\t\tif (!(HASH_ALGORITHMS[key.algorithm])) {\n\t\t\tthrow new Error('Invalid hash algorithm');\n\t\t}\n\n\t\tObject.defineProperty(this, '_hash', {\n\t\t\tconfigurable: true,\n\t\t\tvalue: HASH_ALGORITHMS[key.algorithm]\n\t\t});\n\t\tObject.defineProperty(this, '_codec', { value: codec });\n\t\tObject.defineProperty(this, '_key', {\n\t\t\tvalue: typeof key.data === 'string' ? utf8.encode(<string> key.data) : <ByteBuffer> key.data\n\t\t});\n\t\tObject.defineProperty(this, '_buffer', {\n\t\t\twritable: true,\n\t\t\tvalue: []\n\t\t});\n\t\tObject.defineProperty(this, 'signature', {\n\t\t\tvalue: new Promise((resolve, reject) => {\n\t\t\t\tObject.defineProperty(this, '_resolve', { value: resolve });\n\t\t\t\tObject.defineProperty(this, '_reject', { value: reject });\n\t\t\t})\n\t\t});\n\t}\n\n\tprivate _buffer: number[];\n\tprivate _codec: Codec;\n\tprivate _encoding: string;\n\tprivate _hash: ScriptHash;\n\tprivate _key: ByteBuffer;\n\tprivate _reject: (reason: Error) => void;\n\tprivate _resolve: (value: any) => void;\n\n\tsignature: Promise<ByteBuffer>;\n\n\tabort(reason?: Error): Promise<any> {\n\t\tif (this.signature.state === State.Rejected) {\n\t\t\treturn this.signature\n\t\t}\n\n\t\tthis._reject(reason);\n\t\treturn resolvedPromise;\n\t}\n\n\tclose(): Promise<any> {\n\t\tif (this.signature.state === State.Rejected) {\n\t\t\treturn this.signature\n\t\t}\n\n\t\ttry {\n\t\t\tthis._resolve(hmac(this._hash, this._buffer, this._key));\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tcatch (error) {\n\t\t\tthis._reject(error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t}\n\n\twrite(chunk: T): Promise<any> {\n\t\tif (this.signature.state === State.Rejected) {\n\t\t\treturn this.signature;\n\t\t}\n\n\t\ttry {\n\t\t\tif (typeof chunk === 'string') {\n\t\t\t\tlet chunkString: string = <any> chunk;\n\t\t\t\tthis._buffer = this._buffer.concat(this._codec.encode(chunkString));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet chunkBuffer: number[] = <any> chunk;\n\t\t\t\tthis._buffer = this._buffer.concat(chunkBuffer);\n\t\t\t}\n\n\t\t\treturn resolvedPromise;\n\t\t}\n\t\tcatch (error) {\n\t\t\tthis._reject(error);\n\t\t\treturn this.signature;\n\t\t}\n\t}\n}\n\nexport default function getSign(algorithm: string): SignFunction {\n\tif (!(algorithm in ALGORITHMS)) {\n\t\tthrow new Error('invalid algorithm; available algorithms are [ \\'' + Object.keys(ALGORITHMS).join('\\', \\'') + '\\' ]');\n\t}\n\n\tconst signFunction = <SignFunction> function (key: Key, data: Data, codec: Codec = utf8): Promise<ByteBuffer> {\n\t\treturn sign(algorithm, key, data, codec);\n\t};\n\tsignFunction.create = function<T extends Data> (key: Key, codec: Codec = utf8): Signer<T> {\n\t\treturn new ScriptSigner<T>(algorithm, key, codec);\n\t};\n\n\treturn signFunction;\n}\n"]}